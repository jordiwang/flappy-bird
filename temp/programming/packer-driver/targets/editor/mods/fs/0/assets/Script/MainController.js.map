{"version":3,"sources":["file:///Users/point/projects/flappy-bird/assets/Script/MainController.ts"],"names":["_decorator","Component","Sprite","Vec3","Prefab","Node","instantiate","Button","SystemEvent","ccclass","property","GAME_STATE","MIN_Y","MAX_Y","MainController","type","GS_READY","gameState","value","_gameState","GS_INIT","init","GS_PLAYING","GS_END","onLoad","start","update","deltaTime","i","bgList","length","bg","_bgPosition","node","getPosition","x","setPosition","_pipeList","pipeGroup","pipePosition","y","Math","random","console","log","initCollision","gengeratePipe","titleSprite","active","gameOverSprite","startButton","on","EventType","TOUCH_START","gameStart","pipeGroupPrefab","pipeContainerNode","addChild","birdPosition","birdSprite","gameOver"],"mappings":"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","sourcesContent":["import { _decorator, Component, Sprite, Vec3, Prefab, Node, instantiate, Button, SystemEvent } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = MainController\n * DateTime = Thu Nov 25 2021 17:00:21 GMT+0800 (中国标准时间)\n * Author = jordiwang\n * FileBasename = MainController.ts\n * FileBasenameNoExtension = MainController\n * URL = db://assets/Script/MainController.ts\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\n *\n */\n\nexport enum GAME_STATE {\n    GS_READY,\n    GS_INIT,\n    GS_PLAYING,\n    GS_END,\n}\n\nconst MIN_Y = -120;\nconst MAX_Y = 120;\n\n@ccclass('MainController')\nexport class MainController extends Component {\n    // [1]\n    // dummy = '';\n\n    // [2]\n    // @property\n    // serializableDummy = 0;\n\n    @property({ type: Sprite })\n    public bgList: Sprite[] = [null, null];\n\n    @property({ type: Sprite })\n    public titleSprite: Sprite = null;\n\n    @property({ type: Sprite })\n    public gameOverSprite: Sprite = null;\n\n    @property({ type: Prefab })\n    public pipeGroupPrefab: Prefab = null;\n\n    @property({ type: Node })\n    public pipeContainerNode: Node = null;\n\n    @property({ type: Button })\n    public startButton: Button = null;\n\n    @property({ type: Sprite })\n    public birdSprite: Sprite = null;\n\n    // 背景坐标\n    private _bgPosition: Vec3 = new Vec3();\n\n    // 障碍列表\n    private _pipeList: Node[] = [null, null, null];\n\n    // 游戏状态\n    private _gameState: GAME_STATE = GAME_STATE.GS_READY;\n\n    set gameState(value: GAME_STATE) {\n        this._gameState = value;\n\n        switch (value) {\n            case GAME_STATE.GS_INIT:\n                this.init();\n                break;\n            case GAME_STATE.GS_PLAYING:\n                break;\n            case GAME_STATE.GS_END:\n                break;\n        }\n    }\n\n    get gameState() {\n        return this._gameState;\n    }\n\n    onLoad() {\n        this.gameState = GAME_STATE.GS_INIT;\n    }\n\n    start() {}\n\n    update(deltaTime: number) {\n        if (this.gameState === GAME_STATE.GS_PLAYING) {\n            for (let i = 0; i < this.bgList.length; i++) {\n                const bg = this.bgList[i];\n\n                this._bgPosition = bg.node.getPosition();\n                this._bgPosition.x -= 1;\n\n                if (this._bgPosition.x <= -288) {\n                    this._bgPosition.x = 288;\n                }\n\n                bg.node.setPosition(this._bgPosition);\n            }\n\n            // move pipes\n            for (let i = 0; i < this._pipeList.length; i++) {\n                const pipeGroup = this._pipeList[i];\n\n                const pipePosition = pipeGroup.getPosition();\n\n                pipePosition.x -= 1.0;\n\n                if (pipePosition.x <= -580) {\n                    pipePosition.x = 580;\n\n                    pipePosition.y = MIN_Y + Math.random() * (MAX_Y - MIN_Y);\n                }\n\n                pipeGroup.setPosition(pipePosition);\n            }\n        }\n    }\n\n    init() {\n        console.log('---- init ----');\n\n        this.initCollision();\n        this.gengeratePipe();\n\n        this.titleSprite.node.active = true;\n\n        this.gameOverSprite.node.active = false;\n\n        this.startButton.node.on(SystemEvent.EventType.TOUCH_START, this.gameStart, this);\n    }\n\n    initCollision() {\n        // //open Collision System\n        // const collisionManager = director.getCollisionManager();\n        // collisionManager.enabled = true;\n        // //open debug draw when you debug the game\n        // //do not forget to close when you ship the game\n        // collisionManager.enabledDebugDraw = true;\n\n        console.log('---- initCollision ----');\n    }\n\n    gengeratePipe() {\n        for (let i = 0; i < this._pipeList.length; i++) {\n            let pipeGroup = instantiate(this.pipeGroupPrefab);\n\n            this._pipeList[i] = pipeGroup;\n\n            this.pipeContainerNode.addChild(pipeGroup);\n\n            let pipePosition = pipeGroup.getPosition();\n\n            pipePosition.x = 170 + 200 * i;\n\n            pipePosition.y = MIN_Y + Math.random() * (MAX_Y - MIN_Y);\n\n            pipeGroup.setPosition(pipePosition);\n        }\n    }\n\n    /**\n     * gameStart\n     */\n    public gameStart() {\n        this.gameState = GAME_STATE.GS_PLAYING;\n\n        this.startButton.node.active = false;\n\n        this.gameOverSprite.node.active = false;\n\n        this.titleSprite.node.active = false;\n\n        let birdPosition = this.birdSprite.node.getPosition();\n\n        birdPosition.y = 0;\n\n        this.birdSprite.node.setPosition(birdPosition);\n    }\n\n    /**\n     * gameOver\n     */\n    public gameOver() {\n        this.gameOverSprite.node.active = true;\n\n        this.startButton.node.active = true;\n\n        this.gameState = GAME_STATE.GS_END;\n    }\n}\n"]}